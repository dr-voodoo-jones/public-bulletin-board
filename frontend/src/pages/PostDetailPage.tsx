import { motion } from 'framer-motion'nimport { useState, useEffect } from 'react'nimport { useParams, Link } from 'react-router-dom'nimport { HeartIcon, EyeIcon, ChatBubbleLeftIcon, ShareIcon, ArrowLeftIcon } from '@heroicons/react/24/outline'nimport { HeartIcon as HeartSolidIcon } from '@heroicons/react/24/solid'nimport Button from '../components/common/Button.tsx'nimport Loading from '../components/common/Loading.tsx'nimport { Post } from '../types/post.ts'nnconst PostDetailPage = () => {n  const { id } = useParams()n  const [post, setPost] = useState<Post | null>(null)n  const [loading, setLoading] = useState(true)n  const [isLiked, setIsLiked] = useState(false)n  const [likes, setLikes] = useState(0)nn  useEffect(() => {n    // Simulate API calln    const fetchPost = async () => {n      setLoading(true)n      await new Promise(resolve => setTimeout(resolve, 1000))n      n      // Mock post datan      const mockPost: Post = {n        id: id || '1',n        title: 'My Amazing Adventure! ðŸŒŸ',n        content: 'Just had the most incredible day exploring the mountains. The views were absolutely breathtaking and I met some wonderful people along the way. Nature truly is the best therapy!\n\nThe hike started early in the morning, and as we climbed higher, the landscape transformed dramatically. Each turn revealed a new perspective, and the fresh mountain air was invigorating. We stopped for lunch at a beautiful alpine lake, where we shared stories with fellow hikers from around the world.\n\nThe descent was just as magical, with the setting sun painting the sky in brilliant oranges and pinks. It reminded me that sometimes the best adventures are the ones that challenge you and push you out of your comfort zone.\n\nI can't wait to plan my next mountain adventure!',n        images: [n          'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800',n          'https://images.unsplash.com/photo-1464822759844-d150baec0134?w=800',n          'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800'n        ],n        author: 'AdventureSeeker',n        createdAt: '2024-01-15T10:30:00Z',n        updatedAt: '2024-01-15T10:30:00Z',n        likes: 42,n        views: 156,n        tags: ['adventure', 'nature', 'travel', 'hiking', 'mountains'],n        isActive: truen      }n      n      setPost(mockPost)n      setLikes(mockPost.likes)n      setLoading(false)n    }nn    fetchPost()n  }, [id])nn  const handleLike = () => {n    setIsLiked(!isLiked)n    setLikes(isLiked ? likes - 1 : likes + 1)n  }nn  const handleShare = () => {n    if (navigator.share) {n      navigator.share({n        title: post?.title,n        text: post?.content,n        url: window.location.hrefn      })n    } else {n      navigator.clipboard.writeText(window.location.href)n    }n  }nn  const formatDate = (dateString: string) => {n    return new Date(dateString).toLocaleDateString('en-US', {n      year: 'numeric',n      month: 'long',n      day: 'numeric',n      hour: '2-digit',n      minute: '2-digit'n    })n  }nn  if (loading) {n    return <Loading text='Loading post...' />n  }nn  if (!post) {n    return (n      <div className='text-center py-12'>n        <div className='text-6xl mb-4'>ðŸ˜•</div>n        <h3 className='text-xl font-semibold text-gray-800 dark:text-gray-200 mb-2'>n          Post not foundn        </h3>n        <p className='text-gray-600 dark:text-gray-400 mb-6'>n          The post you're looking for doesn't exist or has been removed.n        </p>n        <Link to='/'>n          <Button>Go Home</Button>n        </Link>n      </div>n    )n  }nn  return (n    <motion.divn      initial={{ opacity: 0 }}n      animate={{ opacity: 1 }}n      className='max-w-4xl mx-auto space-y-8'n    >n      {/* Back Button */}n      <Link to='/'>n        <Button variant='ghost' icon={<ArrowLeftIcon className='w-5 h-5' />}>n          Back to Postsn        </Button>n      </Link>nn      {/* Post Content */}n      <motion.articlen        initial={{ opacity: 0, y: 20 }}n        animate={{ opacity: 1, y: 0 }}n        className='card overflow-hidden'n      >n        {/* Images Gallery */}n        {post.images.length > 0 && (n          <div className='relative h-96 overflow-hidden'>n            <motion.imgn              src={post.images[0]}n              alt={post.title}n              className='w-full h-full object-cover'n              initial={{ scale: 1.1 }}n              animate={{ scale: 1 }}n              transition={{ duration: 0.5 }}n            />n            {post.images.length > 1 && (n              <div className='absolute bottom-4 right-4 bg-black/50 text-white px-3 py-1 rounded-full text-sm'>n                +{post.images.length - 1} moren              </div>n            )}n          </div>n        )}nn        {/* Post Header */}n        <div className='p-8'>n          <h1 className='text-3xl font-bold text-gray-900 dark:text-white mb-4'>n            {post.title}n          </h1>nn          {/* Author and Date */}n          <div className='flex items-center justify-between mb-6'>n            <div className='flex items-center space-x-3'>n              <div className='w-10 h-10 bg-gradient-to-r from-primary-400 to-secondary-400 rounded-full flex items-center justify-center text-white font-bold'>n                {post.author.charAt(0).toUpperCase()}n              </div>n              <div>n                <p className='font-semibold text-gray-900 dark:text-white'>{post.author}</p>n                <p className='text-sm text-gray-500 dark:text-gray-400'>n                  {formatDate(post.createdAt)}n                </p>n              </div>n            </div>n          </div>nn          {/* Tags */}n          {post.tags.length > 0 && (n            <div className='flex flex-wrap gap-2 mb-6'>n              {post.tags.map((tag) => (n                <spann                  key={tag}n                  className='px-3 py-1 bg-primary-100 dark:bg-primary-900/20 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium'n                >n                  #{tag}n                </span>n              ))}n            </div>n          )}nn          {/* Content */}n          <div className='prose prose-lg dark:prose-invert max-w-none mb-8'>n            {post.content.split('\n').map((paragraph, index) => (n              <p key={index} className='text-gray-700 dark:text-gray-300 leading-relaxed'>n                {paragraph}n              </p>n            ))}n          </div>nn          {/* Action Bar */}n          <div className='flex items-center justify-between pt-6 border-t border-gray-200 dark:border-gray-700'>n            <div className='flex items-center space-x-6'>n              <motion.buttonn                whileTap={{ scale: 0.9 }}n                onClick={handleLike}n                className='flex items-center space-x-2 text-gray-500 dark:text-gray-400 hover:text-red-500 transition-colors duration-200'n              >n                {isLiked ? (n                  <HeartSolidIcon className='w-6 h-6 text-red-500' />n                ) : (n                  <HeartIcon className='w-6 h-6' />n                )}n                <span>{likes}</span>n              </motion.button>nn              <div className='flex items-center space-x-2 text-gray-500 dark:text-gray-400'>n                <EyeIcon className='w-6 h-6' />n                <span>{post.views}</span>n              </div>nn              <div className='flex items-center space-x-2 text-gray-500 dark:text-gray-400'>n                <ChatBubbleLeftIcon className='w-6 h-6' />n                <span>0</span>n              </div>n            </div>nn            <motion.buttonn              whileHover={{ scale: 1.05 }}n              whileTap={{ scale: 0.95 }}n              onClick={handleShare}n              className='flex items-center space-x-2 text-primary-500 hover:text-primary-600 transition-colors duration-200'n            >n              <ShareIcon className='w-5 h-5' />n              <span>Share</span>n            </motion.button>n          </div>n        </div>n      </motion.article>n    </motion.div>n  )n}nnexport default PostDetailPage